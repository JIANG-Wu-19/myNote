实验三：Uart+定时器实验
1. 本实验的实验例程（见STM32F746_Experiment_v1.1\05_TIMER，但是要用到Uart的功能）。实验效果，通过超级终端输入闪烁频率（单位Hz），LED灯按设定频率闪烁，可连续输入数字改变频率：
2. 引导输入功能：编译运行，超级终端可以通过Uart接收到ARM板子回传的信息，要求用户输入一串数字（浮点数或整数）。
3. 实时回显功能：ARM接收到用户的每个字符，需要将本字符在回传到超级终端，使得用户可以看到自己输入的字符，按下回车键，ARM程序开始处理用户输入字符串，如果不是数字字符（小数或整数）则回显提示错误；如果是数字字符开始执行后面功能；
4. 数字识别功能：将用户输入的字符串，识别成具体的数字，这个数字表示LED灯闪烁的时间间隔。
5. 灯光闪烁频率（单位Hz）控制：以上面收到的数据去设定定时器，控制LED灯的闪烁间隔。示例：用户输入1，1Hz表示那么LED灯应该1S完成一次亮灭循环，也就是亮0.5s灭0.5s，如此循环往复。


备注：
1）用户可能输入浮点数：0.1，0.1Hz那相当于闪烁周期为1/0.1=10s，因此要生成亮5s，灭5秒的序列。也可能输入5，相当于5Hz相当于要亮0.1秒、灭0.1秒。
2）Uart输入进来是字符串“0.5”的格式，要去把它解析成浮点数0.5，再去做运算。
3）用户可能输入非数字，例如“a.5”这种情况要报错提示。
4）输入数字回车后，不要直接退出程序；能够继续进入下一个数字监听并改变LED闪烁频率循环。
